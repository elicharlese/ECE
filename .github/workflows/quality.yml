name: Code Quality and Security

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 1' # Weekly on Monday

jobs:
  security-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level moderate

      - name: Check for vulnerabilities
        run: |
          npm audit --json > audit-results.json
          VULNERABILITIES=$(cat audit-results.json | jq '.metadata.vulnerabilities.total')
          echo "Total vulnerabilities found: $VULNERABILITIES"
          if [ "$VULNERABILITIES" -gt 10 ]; then
            echo "::error::Too many vulnerabilities found ($VULNERABILITIES). Please review and fix."
            exit 1
          fi

  code-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: |
          npm run lint > lint-results.txt 2>&1 || true
          cat lint-results.txt
          
          # Count errors and warnings
          ERRORS=$(grep -c "error" lint-results.txt || echo "0")
          WARNINGS=$(grep -c "warning" lint-results.txt || echo "0")
          
          echo "ESLint Results:"
          echo "- Errors: $ERRORS"
          echo "- Warnings: $WARNINGS"
          
          # Fail if too many errors
          if [ "$ERRORS" -gt 50 ]; then
            echo "::error::Too many ESLint errors ($ERRORS). Please fix critical issues."
            exit 1
          fi

      - name: Run TypeScript check
        run: |
          npm run type-check > ts-results.txt 2>&1 || true
          cat ts-results.txt
          
          # Check for TypeScript errors
          if grep -q "error TS" ts-results.txt; then
            echo "::error::TypeScript compilation errors found. Please fix."
            exit 1
          fi

      - name: Check bundle size
        run: |
          npm run build
          
          # Check if build output exists and get size
          if [ -d "dist/apps/ece-web" ]; then
            SIZE=$(du -sh dist/apps/ece-web | cut -f1)
            echo "Build size: $SIZE"
            
            # Warning if build is too large (adjust threshold as needed)
            SIZE_MB=$(du -sm dist/apps/ece-web | cut -f1)
            if [ "$SIZE_MB" -gt 100 ]; then
              echo "::warning::Build size is large ($SIZE_MB MB). Consider optimization."
            fi
          fi

  performance-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.12.x

      - name: Run Lighthouse CI
        run: |
          lhci autorun || echo "Lighthouse CI completed with warnings"
