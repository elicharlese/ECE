name: Repository Statistics

on:
  schedule:
    - cron: '0 0 * * 0' # Weekly on Sunday
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  update-stats:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate code statistics
        run: |
          echo "# ECE Repository Statistics" > stats.md
          echo "Generated on: $(date)" >> stats.md
          echo "" >> stats.md
          
          echo "## Code Metrics" >> stats.md
          echo "| Metric | Value |" >> stats.md
          echo "|--------|-------|" >> stats.md
          
          # Count lines of code
          TOTAL_LINES=$(find . -name "*.ts" -o -name "*.tsx" -o -name "*.js" -o -name "*.jsx" | grep -v node_modules | grep -v dist | grep -v .next | xargs wc -l | tail -1 | awk '{print $1}')
          echo "| Total Lines of Code | $TOTAL_LINES |" >> stats.md
          
          # Count TypeScript files
          TS_FILES=$(find . -name "*.ts" -o -name "*.tsx" | grep -v node_modules | grep -v dist | wc -l)
          echo "| TypeScript Files | $TS_FILES |" >> stats.md
          
          # Count components
          COMPONENTS=$(find ./apps ./libs -name "*.tsx" | grep -v node_modules | grep -v test | grep -v spec | wc -l)
          echo "| React Components | $COMPONENTS |" >> stats.md
          
          # Count pages
          PAGES=$(find ./apps/ece-web/src/app -name "page.tsx" | wc -l)
          echo "| Pages | $PAGES |" >> stats.md
          
          # Count API routes
          API_ROUTES=$(find ./apps/ece-web/src/app/api -name "route.ts" | wc -l)
          echo "| API Routes | $API_ROUTES |" >> stats.md
          
          echo "" >> stats.md
          echo "## Project Structure" >> stats.md
          echo "\`\`\`" >> stats.md
          tree -I 'node_modules|.next|dist|.git' -L 3 >> stats.md
          echo "\`\`\`" >> stats.md
          
          echo "" >> stats.md
          echo "## Dependencies" >> stats.md
          echo "### Production Dependencies" >> stats.md
          echo "\`\`\`json" >> stats.md
          jq '.dependencies' package.json >> stats.md
          echo "\`\`\`" >> stats.md
          
          echo "" >> stats.md
          echo "### Development Dependencies Count" >> stats.md
          DEV_DEPS=$(jq '.devDependencies | length' package.json)
          PROD_DEPS=$(jq '.dependencies | length' package.json)
          echo "- Production: $PROD_DEPS" >> stats.md
          echo "- Development: $DEV_DEPS" >> stats.md
          echo "- Total: $((PROD_DEPS + DEV_DEPS))" >> stats.md

      - name: Update README with stats
        run: |
          # Update the README with current statistics
          sed -i "s/lines%20of%20code-[0-9]*K*/lines%20of%20code-$(($TOTAL_LINES/1000))K+/g" README.md
          sed -i "s/components-[0-9]*+/components-$COMPONENTS+/g" README.md

      - name: Commit statistics
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add stats.md README.md
          git diff --staged --quiet || git commit -m "docs: update repository statistics [skip ci]"
          git push || echo "No changes to push"
