name: CI

on:
  push:
    branches: [main]
  pull_request:

permissions:
  actions: read
  contents: read
  checks: write
  pull-requests: write
  workflow: write # FIXME: this is not working

jobs:
  main:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: your_user
          POSTGRES_PASSWORD: your_password
          POSTGRES_DB: your_db_name
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://your_user:your_password@localhost:5432/your_db_name

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Connect your workspace on nx.app and uncomment this to enable task distribution.
      # The "--stop-agents-after" is optional but allows idle agents to shut down once the "e2e-ci" targets have been requested
      - run: npx nx-cloud start-ci-run --distribute-on="5 linux-medium-js" --stop-agents-after="e2e-ci"

      # Cache node_modules
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - uses: nrwl/nx-set-shas@v4

      # Lint, Test, Build, and E2E
      - run: npx nx affected -t lint test build e2e-ci # nx-cloud record --

      # Docker build and push
      - name: Docker build
        run: docker build -t your-app-name .

      - name: Docker push
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag your-app-name:latest your-docker-repo/your-app-name:latest
          docker push your-docker-repo/your-app-name:latest