name: 📊 System Health & Statistics

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * *' # Daily at midnight UTC

jobs:
  health-check:
    name: 🏥 Health Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📊 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Type checking
        run: npx nx run-many --target=type-check --all --parallel

      - name: 🧪 Run tests
        run: npx nx run-many --target=test --all --parallel --coverage

      - name: 🔧 Lint code
        run: npx nx run-many --target=lint --all --parallel

      - name: 🏗️ Build applications
        run: npx nx run-many --target=build --all --parallel

      - name: 📈 Generate statistics
        run: |
          echo "## 📊 ECE System Statistics" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Lines of Code | $(find . -name '*.ts' -o -name '*.tsx' -o -name '*.js' -o -name '*.jsx' | grep -v node_modules | grep -v dist | xargs wc -l | tail -1 | awk '{print $1}') |" >> $GITHUB_STEP_SUMMARY
          echo "| Components | $(find apps libs -name '*.tsx' | grep -v test | grep -v spec | wc -l) |" >> $GITHUB_STEP_SUMMARY
          echo "| Test Files | $(find . -name '*.test.*' -o -name '*.spec.*' | grep -v node_modules | wc -l) |" >> $GITHUB_STEP_SUMMARY
          echo "| Build Size | $(du -sh dist/ 2>/dev/null || echo "N/A") |" >> $GITHUB_STEP_SUMMARY
          echo "| Node Version | $(node --version) |" >> $GITHUB_STEP_SUMMARY
          echo "| TypeScript | $(npx tsc --version) |" >> $GITHUB_STEP_SUMMARY

  performance:
    name: ⚡ Performance Analysis
    runs-on: ubuntu-latest
    needs: health-check
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📊 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build for analysis
        run: npx nx build ece-web

      - name: 📊 Bundle analysis
        run: |
          npx next-bundle-analyzer apps/ece-web/.next || echo "Bundle analyzer not available"

      - name: 🔍 Lighthouse CI
        uses: treosh/lighthouse-ci-action@v11
        with:
          configPath: '.github/lighthouse/lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📊 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 🔍 Security audit
        run: npm audit --audit-level moderate

      - name: 🛡️ Snyk security scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium

  code-quality:
    name: 📝 Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📊 SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: 📊 CodeClimate
        uses: paambaati/codeclimate-action@v8.0.0
        continue-on-error: true
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

  documentation:
    name: 📚 Documentation Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📝 Check documentation completeness
        run: |
          echo "## 📚 Documentation Status" >> $GITHUB_STEP_SUMMARY
          echo "| Document | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| README.md | $([ -f README.md ] && echo "✅ Exists" || echo "❌ Missing") |" >> $GITHUB_STEP_SUMMARY
          echo "| API Docs | $([ -d docs/api ] && echo "✅ Exists" || echo "❌ Missing") |" >> $GITHUB_STEP_SUMMARY
          echo "| Architecture | $([ -d docs/architecture ] && echo "✅ Exists" || echo "❌ Missing") |" >> $GITHUB_STEP_SUMMARY
          echo "| User Guides | $([ -d docs/user-guides ] && echo "✅ Exists" || echo "❌ Missing") |" >> $GITHUB_STEP_SUMMARY
          echo "| Contributing | $([ -f docs/contributing/README.md ] && echo "✅ Exists" || echo "❌ Missing") |" >> $GITHUB_STEP_SUMMARY

  deploy-preview:
    name: 🚀 Deploy Preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Deploy to Vercel Preview
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_ORG_ID }}
