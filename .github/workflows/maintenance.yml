name: "Maintenance: Health, Quality, Security, Docs, Stats"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * 1' # Weekly on Monday
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  health:
    name: 🏥 Health Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - name: Type checking (Nx)
        run: npx nx run-many --target=type-check --all --parallel || npm run type-check || true
      - name: Unit tests (Nx)
        run: npx nx run-many --target=test --all --parallel --coverage || npm run test -- --coverage
      - name: Lint (Nx)
        run: npx nx run-many --target=lint --all --parallel || npm run lint
      - name: Build all (Nx)
        run: npx nx run-many --target=build --all --parallel || npm run build:all || npm run build

  performance:
    name: ⚡ Performance & Lighthouse
    runs-on: ubuntu-latest
    needs: health
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - name: Build web app
        run: npx nx build ece-web || npm run build
      - name: Lighthouse CI
        uses: treosh/lighthouse-ci-action@v11
        with:
          configPath: '.github/lighthouse/lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true
        continue-on-error: true

  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: npm audit (moderate)
        run: npm audit --audit-level moderate || true
      - name: Snyk (optional)
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium

  quality:
    name: 📝 Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: SonarCloud (optional)
        uses: SonarSource/sonarcloud-github-action@master
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: CodeClimate (optional)
        uses: paambaati/codeclimate-action@v8.0.0
        continue-on-error: true
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

  docs:
    name: 📚 Documentation Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Check documentation completeness
        run: |
          echo "## 📚 Documentation Status" >> $GITHUB_STEP_SUMMARY
          echo "| Document | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| README.md | $([ -f README.md ] && echo "✅ Exists" || echo "❌ Missing") |" >> $GITHUB_STEP_SUMMARY
          echo "| API Docs | $([ -d docs/api ] && echo \"✅ Exists\" || echo \"❌ Missing\") |" >> $GITHUB_STEP_SUMMARY
          echo "| Architecture | $([ -d docs/architecture ] && echo \"✅ Exists\" || echo \"❌ Missing\") |" >> $GITHUB_STEP_SUMMARY
          echo "| User Guides | $([ -d docs/user-guides ] && echo \"✅ Exists\" || echo \"❌ Missing\") |" >> $GITHUB_STEP_SUMMARY
          echo "| Contributing | $([ -f docs/contributing/README.md ] && echo \"✅ Exists\" || echo \"❌ Missing\") |" >> $GITHUB_STEP_SUMMARY

  stats:
    name: 📈 Repository Statistics
    runs-on: ubuntu-latest
    schedule: []
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - name: Generate statistics
        run: |
          echo "# ECE Repository Statistics" > stats.md
          echo "Generated on: $(date)" >> stats.md
          echo "" >> stats.md
          echo "## Code Metrics" >> stats.md
          echo "| Metric | Value |" >> stats.md
          echo "|--------|-------|" >> stats.md
          TOTAL_LINES=$(find . -name "*.ts" -o -name "*.tsx" -o -name "*.js" -o -name "*.jsx" | grep -v node_modules | grep -v dist | grep -v .next | xargs wc -l | tail -1 | awk '{print $1}')
          echo "| Total Lines of Code | $TOTAL_LINES |" >> stats.md
          TS_FILES=$(find . -name "*.ts" -o -name "*.tsx" | grep -v node_modules | grep -v dist | wc -l)
          echo "| TypeScript Files | $TS_FILES |" >> stats.md
          COMPONENTS=$(find ./apps ./libs -name "*.tsx" | grep -v node_modules | grep -v test | grep -v spec | wc -l)
          echo "| React Components | $COMPONENTS |" >> stats.md
          PAGES=$(find ./apps/ece-web/src/app -name "page.tsx" | wc -l)
          echo "| Pages | $PAGES |" >> stats.md
          API_ROUTES=$(find ./apps/ece-web/src/app/api -name "route.ts" | wc -l)
          echo "| API Routes | $API_ROUTES |" >> stats.md
      - name: Commit statistics
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add stats.md
          git diff --staged --quiet || git commit -m "docs: update repository statistics [skip ci]"
          git push || echo "No changes to push"
